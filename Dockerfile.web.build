ARG NODE_VERSION=20


################################################################################
# Use node image for base image for all stages.
FROM --platform=linux/amd64 node:${NODE_VERSION}-bookworm-slim as base

ARG YARN_VERSION=4.0.2

# Set working directory for all build stages.
WORKDIR /usr/src/app
#yarn v4.0.2
RUN corepack enable && corepack prepare yarn@${YARN_VERSION} && yarn set version ${YARN_VERSION}


# add the user and group we'll need in our final image
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs

################################################################################
# Create a stage for installing production dependecies.
FROM base as deps
WORKDIR /usr/src/app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.yarn to speed up subsequent builds.
# Leverage bind mounts to package.json and yarn.lock to avoid having to copy them
# into this layer.

COPY ./package* ./
COPY ./yarn* ./

# RUN --mount=type=bind,source=package.json,target=package.json \
#     --mount=type=bind,source=yarn.lock,target=yarn.lock \
#     --mount=type=cache,target=/root/.yarn \
#     yarn install

RUN yarn install

RUN yarn workspaces focus --all --production


################################################################################
# Create a stage for building the application.
FROM deps as build
WORKDIR /usr/src/app

# Copy the rest of the source files into the image.

COPY ./package* ./
COPY ./yarn* ./
COPY . .
COPY --from=deps /usr/src/app/.yarn ./.yarn

RUN cd /usr/src/app/apps && ls
RUN yarn run


# Run the build script.

RUN yarn web-install
RUN yarn web-build


################################################################################
# Create a new stage to run the application with minimal runtime dependencies
# where the necessary files are copied from the build stage.
FROM base as final
WORKDIR /usr/src/app

# Use production node environment by default.
ENV NODE_ENV production

# Run the application as a non-root user.
USER node

# Copy package.json so that package manager commands can be used.
COPY package.json .


# Copy the production dependencies from the deps stage and also
# the built application from the build stage into the image.
COPY --from=build /usr/src/app/.yarn ./.yarn

# COPY --from=deps /usr/src/app/node_modules ./node_modules

# COPY --from=build /usr/src/app/.next ./.next

# COPY --from=build /usr/src/app/ ./public

# Run the application.
CMD yarn start
